plugins {
	id "com.github.johnrengelman.shadow" version "1.2.3"
	id 'net.minecrell.licenser' version '0.3'
	//id 'org.spongepowered.event-impl-gen' version '5.0.2'
}

// Arguments :
ext.everplugins = project

version = "S" + ext.spongeapi_version + "-R"  + plugin_version + "-BETA"
if (project.hasProperty("build_number")) {
	version = version + '-' + project.property("build_number")
}

allprojects {
	group = 'fr.evercraft'
	version = everplugins.version
	organization = 'EverCraft'
}

// Default tasks
defaultTasks 'clean', 'licenseFormat', 'build', 'shadowJar'


configure(subprojects.findAll {it.name != "SpongeAPI" && it.name != "EverPlugins"}) {
	apply plugin: 'groovy'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'maven'
	apply plugin: 'java'

	repositories {
		mavenCentral()
		maven {
			name = 'sponge'
			url = 'https://repo.spongepowered.org/maven'
		}
		maven {
			name = 'worldedit'
			url = 'http://maven.sk89q.com/artifactory/repo'
		}
	}
	
	dependencies {
		compile "org.spongepowered:spongeapi:" + spongeapi_version + "-SNAPSHOT"
		testCompile 'junit:junit:4.7'
		//compile project(':SpongeAPI')
	}
	
	jar {
		manifest {
			attributes 'Implementation-Title': name,
					   'Implementation-Version': version
		}
	}
	
	libsDirName = new File(rootProject.projectDir, "build/plugins")
	
	apply plugin: 'net.minecrell.licenser'
	
	processResources {
		from 'HEADER.txt'
	}
		
	license {
		header = everplugins.file('HEADER.txt')
		include '**/*.java'
		ignoreFailures = true
		newLine = false // Disables the new line
		ext {
			name = project.name
			organization = project.organization
			url = project.url
		}
	}
}

task('setupDecompWorkspace', dependsOn: 'genEventImpl')

configure(subprojects.findAll {it.name != "EverAPI" && it.name != "SpongeAPI"}) {
	dependencies {
		compile project(":EverAPI")
	}
}

project(':EverAPI') {	
	dependencies {
		compile "com.sk89q.worldedit:worldedit-sponge:6.1.7-SNAPSHOT"
		compile "com.sk89q.worldedit:worldedit-core:6.1.4-SNAPSHOT"
		compile "io.netty:netty-all:4.0.23.Final"
	}
	
	// Replace
	def versionFile =  'src/main/java/fr/evercraft/everapi/EverAPI.java'
	def tempDir = 'build/tmp/sourcesCache'
	def versionFileName = 'EverAPI.java'
	compileJava.doFirst {
		copy {
			from(versionFile)
			into(tempDir)
		}
		ant.replace(file: versionFile, token: '{EVERPLUGINS_VERSION}', value: plugin_version)
		ant.replace(file: versionFile, token: '{SPONGEAPI_VERSION}', value: spongeapi_version + "-SNAPSHOT")
	}
	compileJava.doLast {
		copy {
			from(tempDir + '/' + versionFileName)
			into(project.file(versionFile).parent)
		}
	}
	
	// Event
	/*apply plugin: 'org.spongepowered.event-impl-gen'
	genEventImpl {
		// The full qualified class name of the factory
		outputFactory = 'fr.evercraft.everapi.event.ESpongeEventFactory'
		// The path to your event interfaces
		include 'src/main/java/fr/evercraft/everapi/event/*'
	}*/
}

// Include JavaX
project(':EverMails') {
	apply plugin: 'com.github.johnrengelman.shadow'
	configurations {
		shadow
	}
	dependencies {
		compile 'javax.mail:mail:1.4.7'
		shadow 'javax.mail:mail:1.4.7'
	}
	shadowJar {
		baseName = project.name
	   	classifier = null
	   	version = project.version
	
		configurations += [project.configurations.shadow]
	  	dependencies {
			include(dependency('javax.mail:mail:1.4.7'))
	  	}
	}
}

task clean {
    delete "${buildDir}"
}

// Jenkins
task zip(type: Zip) {
	from "build/plugins"
	include '*.jar'
	
	archiveName 'All-EverPlugins-' + everplugins.version + ".zip"
	destinationDir file('build/plugins')
}
